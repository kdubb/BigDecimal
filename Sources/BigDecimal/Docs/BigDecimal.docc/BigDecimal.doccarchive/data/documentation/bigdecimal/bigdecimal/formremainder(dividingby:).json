{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formRemainder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dividingBy"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": `Self`"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to use when dividing this value."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For two finite values "},{"type":"codeVoice","code":"x"},{"type":"text","text":" and "},{"type":"codeVoice","code":"y"},{"type":"text","text":", the remainder "},{"type":"codeVoice","code":"r"},{"type":"text","text":" of dividing "},{"type":"codeVoice","code":"x"},{"type":"text","text":" by"},{"type":"text","text":" "},{"type":"codeVoice","code":"y"},{"type":"text","text":" satisfies "},{"type":"codeVoice","code":"x == y * q + r"},{"type":"text","text":", where "},{"type":"codeVoice","code":"q"},{"type":"text","text":" is the integer nearest to"},{"type":"text","text":" "},{"type":"codeVoice","code":"x \/ y"},{"type":"text","text":". If "},{"type":"codeVoice","code":"x \/ y"},{"type":"text","text":" is exactly halfway between two integers, "},{"type":"codeVoice","code":"q"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"chosen to be even. Note that "},{"type":"codeVoice","code":"q"},{"type":"text","text":" is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"x \/ y"},{"type":"text","text":" computed in"},{"type":"text","text":" "},{"type":"text","text":"floating-point arithmetic, and that "},{"type":"codeVoice","code":"q"},{"type":"text","text":" may not be representable in any"},{"type":"text","text":" "},{"type":"text","text":"available integer type."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example calculates the remainder of dividing 8.625 by 0.75:"}]},{"type":"codeListing","syntax":null,"code":["var x = 8.625","print(x \/ 0.75)","\/\/ Prints \"11.5\"","","let q = (x \/ 0.75).rounded(.toNearestOrEven)","\/\/ q == 12.0","x.formRemainder(dividingBy: 0.75)","\/\/ x == -0.375","","let x1 = 0.75 * q + x","\/\/ x1 == 8.625"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this value and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" are finite numbers, the remainder is in the"},{"type":"text","text":" "},{"type":"text","text":"closed range "},{"type":"codeVoice","code":"-abs(other \/ 2)...abs(other \/ 2)"},{"type":"text","text":". The"},{"type":"text","text":" "},{"type":"codeVoice","code":"formRemainder(dividingBy:)"},{"type":"text","text":" method is always exact."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/bigdecimal\/bigdecimal\/formremainder(dividingby:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal\/formRemainder(dividingBy:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Replaces this value with the remainder of itself divided by the given"},{"type":"text","text":" "},{"type":"text","text":"value."}],"kind":"symbol","metadata":{"role":"symbol","title":"formRemainder(dividingBy:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formRemainder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dividingBy"},{"kind":"text","text":": `Self`"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:10BigDecimalAAV13formRemainder10dividingByyAB_tF","extendedModule":"BigDecimal","modules":[{"name":"BigDecimal"}]},"hierarchy":{"paths":[["doc:\/\/BigDecimal\/documentation\/BigDecimal","doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal","doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal\/FloatingPoint-Implementations"]]},"references":{"doc://BigDecimal/documentation/BigDecimal/BigDecimal/maxDigits":{"role":"symbol","title":"maxDigits","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxDigits"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[],"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits","kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/maxdigits"},"doc://BigDecimal/documentation/BigDecimal/BigDecimal/exponent":{"role":"symbol","title":"exponent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"exponent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"The signed exponent - the value of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"self"}]},{"type":"text","text":" is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"self.significand"}]},{"type":"text","text":" *"},{"type":"text","text":" "},{"type":"text","text":"10^"},{"type":"emphasis","inlineContent":[{"type":"text","text":"self.exponent"}]}],"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent","kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/exponent"},"doc://BigDecimal/documentation/BigDecimal/BigDecimal":{"role":"symbol","title":"BigDecimal","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BigDecimal"}],"abstract":[{"type":"text","text":"A signed decimal value of unbounded precision (actually there is a"},{"type":"text","text":" "},{"type":"text","text":"practical limit defined by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal\/maxDigits"},{"type":"text","text":" of 200 that the user can change)."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal"},{"type":"text","text":" value is represented as a signed "},{"type":"codeVoice","code":"BInt"},{"type":"text","text":" significand"},{"type":"text","text":" "},{"type":"text","text":"and a signed "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" exponent that is limited to ten digits."},{"type":"text","text":" "},{"type":"text","text":"The value of a Self is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits"},{"type":"text","text":" * 10^"},{"type":"reference","isActive":true,"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal\/exponent"},{"type":"text","text":"."}],"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BigDecimal"}],"url":"\/documentation\/bigdecimal\/bigdecimal"},"doc://BigDecimal/documentation/BigDecimal":{"role":"collection","title":"BigDecimal","abstract":[{"type":"text","text":"The BigDecimal package provides arbitrary-precision (with an adjustable upper"},{"type":"text","text":" "},{"type":"text","text":"limit for performance) and fixed-precision decimal arithmetic in Swift."}],"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal","kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal"},"doc://BigDecimal/documentation/BigDecimal/BigDecimal/formRemainder(dividingBy:)":{"role":"symbol","title":"formRemainder(dividingBy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formRemainder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dividingBy"},{"kind":"text","text":": `Self`"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Replaces this value with the remainder of itself divided by the given"},{"type":"text","text":" "},{"type":"text","text":"value."}],"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal\/formRemainder(dividingBy:)","kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/formremainder(dividingby:)"},"doc://BigDecimal/documentation/BigDecimal/BigDecimal/digits":{"role":"symbol","title":"digits","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"digits"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BInt","preciseIdentifier":"s:6BigInt4BIntV"}],"abstract":[{"type":"text","text":"The signed BInt significand"}],"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal\/digits","kind":"symbol","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/digits"},"doc://BigDecimal/documentation/BigDecimal/BigDecimal/FloatingPoint-Implementations":{"role":"collectionGroup","title":"FloatingPoint Implementations","abstract":[],"identifier":"doc:\/\/BigDecimal\/documentation\/BigDecimal\/BigDecimal\/FloatingPoint-Implementations","kind":"article","type":"topic","url":"\/documentation\/bigdecimal\/bigdecimal\/floatingpoint-implementations"}}}